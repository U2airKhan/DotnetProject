name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: dotnet-core-app
        path: ${{ runner.temp }}/artifact

    - name: List Downloaded Artifact
      run: |
        echo "Listing contents of downloaded artifact directory:"
        ls -al ${{ runner.temp }}/artifact

    - name: Check Artifact Directory
      run: |
        if [ -d "${{ runner.temp }}/artifact" ]; then
          echo "Artifact directory exists."
        else
          echo "Artifact directory does not exist."
        fi

    - name: Deploy to Windows Server
      env:
        SERVER_USER: ${{ secrets.WINDOWS_SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.WINDOWS_SERVER_PASSWORD }}
        SERVER_HOST: ${{ secrets.WINDOWS_SERVER_HOST }}
      run: |
        echo "Starting deployment to Windows Server"
        sudo apt-get install -y powershell
        echo "\$sourcePath = '${{ runner.temp }}\artifact\*'" > deploy.ps1
        echo "\$destinationPath = 'C:\inetpub\wwwroot\dotnetsample'" >> deploy.ps1
        echo "if (-not (Test-Path \$destinationPath)) { New-Item -ItemType Directory -Path \$destinationPath }" >> deploy.ps1
        echo "Copy-Item -Path \$sourcePath -Destination \$destinationPath -Recurse" >> deploy.ps1
        pwsh -Command "Invoke-Command -ComputerName $env:SERVER_HOST -Credential (New-Object PSCredential('$env:SERVER_USER', (ConvertTo-SecureString '$env:SERVER_PASSWORD' -AsPlainText -Force))) -ScriptBlock {& 'C:\path\to\deploy.ps1'}"
